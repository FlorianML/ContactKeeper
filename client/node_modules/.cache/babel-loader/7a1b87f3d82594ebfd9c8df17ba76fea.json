{"ast":null,"code":"var _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contacts/contactContext';\nimport Spinner from '../layout/Spinner';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered,\n        getContacts = contactContext.getContacts,\n        loading = contactContext.loading;\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line\n  }, [contacts]);\n\n  if (contacts === undefined) {\n    console.log('undefined');\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Please add a contact\");\n  } else if (contacts === null) {\n    console.log('null');\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Please add a contact\");\n  } else {\n    console.log(contacts.length);\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Please add a contact\");\n  } // return (\n  //     <Fragment>\n  //         {contacts !== null && !loading ?\n  //             (<TransitionGroup>\n  //                 {filtered !== null ? filtered.map(contact => (\n  //                     <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n  //                         <ContactItem contact={contact} />\n  //                     </CSSTransition>\n  //                 )) : contacts.map(contact => (\n  //                     <CSSTransition key={contact._id} timeout={500} classNames=\"item\" >\n  //                         <ContactItem contact={contact} />\n  //                     </CSSTransition>\n  //                 ))}\n  //             </TransitionGroup>)\n  //             :\n  //             (<Spinner />)}\n  //     </Fragment>\n  // )\n\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","undefined","console","log","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,cAAc,GAAGT,UAAU,CAACM,cAAD,CAAjC;AADmB,QAEXI,QAFW,GAEkCD,cAFlC,CAEXC,QAFW;AAAA,QAEDC,QAFC,GAEkCF,cAFlC,CAEDE,QAFC;AAAA,QAESC,WAFT,GAEkCH,cAFlC,CAESG,WAFT;AAAA,QAEsBC,OAFtB,GAEkCJ,cAFlC,CAEsBI,OAFtB;AAInBX,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;;AAKA,MAAIA,QAAQ,KAAKI,SAAjB,EAA4B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,GAHD,MAGO,IAAIN,QAAQ,KAAK,IAAjB,EAAuB;AAC1BK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,GAHM,MAGA;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,MAArB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,GAlBkB,CAoBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,CAtCD;;AAwCA,eAAeT,QAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem'\nimport ContactContext from '../../context/contacts/contactContext'\nimport Spinner from '../layout/Spinner'\n\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n    const { contacts, filtered, getContacts, loading } = contactContext;\n\n    useEffect(() => {\n        getContacts();\n        // eslint-disable-next-line\n    }, [contacts]);\n\n    if (contacts === undefined) {\n        console.log('undefined')\n        return <h4>Please add a contact</h4>;\n    } else if (contacts === null) {\n        console.log('null')\n        return <h4>Please add a contact</h4>;\n    } else {\n        console.log(contacts.length)\n        return <h4>Please add a contact</h4>;\n    }\n\n    // return (\n    //     <Fragment>\n    //         {contacts !== null && !loading ?\n    //             (<TransitionGroup>\n    //                 {filtered !== null ? filtered.map(contact => (\n    //                     <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n    //                         <ContactItem contact={contact} />\n    //                     </CSSTransition>\n    //                 )) : contacts.map(contact => (\n    //                     <CSSTransition key={contact._id} timeout={500} classNames=\"item\" >\n    //                         <ContactItem contact={contact} />\n    //                     </CSSTransition>\n    //                 ))}\n    //             </TransitionGroup>)\n    //             :\n    //             (<Spinner />)}\n    //     </Fragment>\n    // )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}