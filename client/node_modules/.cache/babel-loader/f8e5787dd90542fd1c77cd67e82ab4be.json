{"ast":null,"code":"import _slicedToArray from \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/contacts/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport axios from 'axios';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //ADD CONTACT\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //DELETE CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //SET CURRENT CONTACT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //CLEAR CURRENT CONTACT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //UPDATE CONTACT\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //FILTER CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //CLEAR FILTER\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/contacts/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContactReducer","axios","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","id","v4","type","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GAArB;;AAD4B,sBAOFjB,UAAU,CAACG,cAAD,EAAiBW,YAAjB,CAPR;AAAA;AAAA,QAOrBI,KAPqB;AAAA,QAOdC,QAPc,oBAS5B;;;AACA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC5BA,IAAAA,OAAO,CAACC,EAAR,GAAarB,IAAI,CAACsB,EAAL,EAAb;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEnB,WAAR;AAAqBoB,MAAAA,OAAO,EAAEJ;AAA9B,KAAD,CAAR;AACH,GAHD,CAV4B,CAe5B;;;AACA,QAAMK,aAAa,GAAIJ,EAAD,IAAQ;AAC1BH,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAElB,cAAR;AAAwBmB,MAAAA,OAAO,EAAEH;AAAjC,KAAD,CAAR;AACH,GAFD,CAhB4B,CAoB5B;;;AACA,QAAMK,UAAU,GAAIN,OAAD,IAAa;AAC5BF,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEjB,WAAR;AAAqBkB,MAAAA,OAAO,EAAEJ;AAA9B,KAAD,CAAR;AACH,GAFD,CArB4B,CAyB5B;;;AACA,QAAMO,YAAY,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACH,GAFD,CA1B4B,CA8B5B;;;AACA,QAAMqB,aAAa,GAAIR,OAAD,IAAa;AAC/BF,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEf,cAAR;AAAwBgB,MAAAA,OAAO,EAAEJ;AAAjC,KAAD,CAAR;AACH,GAFD,CA/B4B,CAmC5B;;;AACA,QAAMS,cAAc,GAAIC,IAAD,IAAU;AAC7BZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEd,eAAR;AAAyBe,MAAAA,OAAO,EAAEM;AAAlC,KAAD,CAAR;AACH,GAFD,CApC4B,CAwC5B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBb,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AACH,GAFD;;AAKA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADb;AAEHC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFZ;AAGHC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHb;AAIHG,MAAAA,UAJG;AAISM,MAAAA,aAJT;AAKHC,MAAAA,UALG;AAKSC,MAAAA,YALT;AAMHC,MAAAA,aANG;AAMYC,MAAAA,cANZ;AAOHE,MAAAA;AAPG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKnB,KAAK,CAACoB,QAVX,CADJ;AAcH,CA5DD;;AA8DA,eAAerB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport axios from 'axios'\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types'\n\nconst ContactState = (props) => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //ADD CONTACT\n    const addContact = (contact) => {\n        contact.id = uuid.v4()\n        dispatch({ type: ADD_CONTACT, payload: contact })\n    }\n\n    //DELETE CONTACT\n    const deleteContact = (id) => {\n        dispatch({ type: DELETE_CONTACT, payload: id })\n    }\n\n    //SET CURRENT CONTACT\n    const setCurrent = (contact) => {\n        dispatch({ type: SET_CURRENT, payload: contact })\n    }\n\n    //CLEAR CURRENT CONTACT\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    //UPDATE CONTACT\n    const updateContact = (contact) => {\n        dispatch({ type: UPDATE_CONTACT, payload: contact })\n    }\n\n    //FILTER CONTACTS\n    const filterContacts = (text) => {\n        dispatch({ type: FILTER_CONTACTS, payload: text })\n    }\n\n    //CLEAR FILTER\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER })\n    }\n\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filtered: state.filtered,\n                addContact, deleteContact,\n                setCurrent, clearCurrent,\n                updateContact, filterContacts,\n                clearFilter\n            }}>\n            {props.children}\n        </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}