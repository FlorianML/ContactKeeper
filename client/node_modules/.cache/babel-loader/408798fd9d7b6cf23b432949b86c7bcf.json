{"ast":null,"code":"import _objectSpread from \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contacts/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const addContact = contactContext.addContact,\n        current = contactContext.current,\n        clearCurrent = contactContext.clearCurrent,\n        updateContact = contactContext.updateContact;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n\n  const _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const onChange = e => {\n    setContact(_objectSpread({}, contact, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    } else {\n      updateContact(contact);\n    }\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, !current ? 'Add Contact' : 'Edit Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"Phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Contact Type: \"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), \"Professional\", ' ', React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: !current ? 'Add Contact' : 'Update Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-primary btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport ContactContext from '../../context/contacts/contactContext'\n\nconst ContactForm = () => {\n    const contactContext = useContext(ContactContext);\n    const { addContact, current, clearCurrent, updateContact } = contactContext\n\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current);\n        } else {\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'personal'\n            })\n        }\n    }, [contactContext, current])\n\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n    });\n\n    const onChange = (e) => {\n        setContact({\n            ...contact, [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (current === null) {\n            addContact(contact)\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'personal'\n            });\n        } else {\n            updateContact(contact)\n        }\n    }\n\n    const clearAll = () => {\n        clearCurrent();\n    }\n\n    const { name, email, phone, type } = contact;\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"primary\">{!current ? 'Add Contact' : 'Edit Contact'}</h2>\n            <input type=\"text\" name=\"name\" placeholder=\"Name\" value={name} onChange={onChange} />\n            <input type=\"text\" name=\"email\" placeholder=\"Email\" value={email} onChange={onChange} />\n            <input type=\"text\" name=\"phone\" placeholder=\"Phone\" value={phone} onChange={onChange} />\n\n            <h5>Contact Type: </h5>\n            <input type=\"radio\"\n                name=\"type\"\n                value=\"personal\"\n                checked={type === 'personal'}\n                onChange={onChange} />\n            Personal{' '}\n\n            <input type=\"radio\"\n                name=\"type\"\n                value=\"professional\"\n                checked={type === 'professional'}\n                onChange={onChange} />\n            Professional{' '}\n            <div>\n                <input type=\"submit\" value={!current ? 'Add Contact' : 'Update Contact'} className=\"btn btn-primary btn-block\" />\n            </div>\n            {current && <div>\n                <button className=\"btn-primary btn-block\" onClick={clearAll}>Clear</button>\n            </div>}\n        </form>\n    )\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}