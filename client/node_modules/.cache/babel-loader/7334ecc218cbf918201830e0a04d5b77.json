{"ast":null,"code":"import _slicedToArray from \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/contacts/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: \"1\",\n      name: \"Sarah Smith\",\n      email: \"sarahsmith@gmail.com\",\n      type: \"professional\"\n    }, {\n      id: \"2\",\n      name: \"Ted Johnson\",\n      email: \"tedjohnson@gmail.com\",\n      phone: \"3334445555\",\n      type: \"personal\"\n    }, {\n      id: \"3\",\n      name: \"Harry White\",\n      email: \"harrywhite@gmail.com\",\n      type: \"professional\"\n    }],\n    current: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //ADD CONTACT\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //DELETE CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //SET CURRENT CONTACT\n  //CLEAR CURRENT CONTACT\n  //UPDATE CONTACT\n  //FILTER CONTACTS\n  //CLEAR FILTER\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/contacts/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","type","phone","current","state","dispatch","addContact","contact","v4","payload","deleteContact","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,sBAHX;AAIIC,MAAAA,IAAI,EAAE;AAJV,KADM,EAON;AACIH,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,sBAHX;AAIIE,MAAAA,KAAK,EAAE,YAJX;AAKID,MAAAA,IAAI,EAAE;AALV,KAPM,EAcN;AACIH,MAAAA,EAAE,EAAE,GADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,sBAHX;AAIIC,MAAAA,IAAI,EAAE;AAJV,KAdM,CADO;AAuBjBE,IAAAA,OAAO,EAAE;AAvBQ,GAArB;;AAD4B,sBA2BFpB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CA3BR;AAAA;AAAA,QA2BrBQ,KA3BqB;AAAA,QA2BdC,QA3Bc,oBA6B5B;;;AACA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC5BA,IAAAA,OAAO,CAACT,EAAR,GAAad,IAAI,CAACwB,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEd,WAAR;AAAqBsB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACH,GAHD,CA9B4B,CAmC5B;;;AACA,QAAMG,aAAa,GAAIZ,EAAD,IAAQ;AAC1BO,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEb,cAAR;AAAwBqB,MAAAA,OAAO,EAAEX;AAAjC,KAAD,CAAR;AACH,GAFD,CApC4B,CAwC5B;AAEA;AAEA;AAEA;AAEA;;;AAGA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADb;AAEHS,MAAAA,UAFG;AAESI,MAAAA;AAFT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKf,KAAK,CAACgB,QANX,CADJ;AAUH,CA7DD;;AA+DA,eAAejB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types'\n\nconst ContactState = (props) => {\n    const initialState = {\n        contacts: [\n            {\n                id: \"1\",\n                name: \"Sarah Smith\",\n                email: \"sarahsmith@gmail.com\",\n                type: \"professional\"\n            },\n            {\n                id: \"2\",\n                name: \"Ted Johnson\",\n                email: \"tedjohnson@gmail.com\",\n                phone: \"3334445555\",\n                type: \"personal\",\n            },\n            {\n                id: \"3\",\n                name: \"Harry White\",\n                email: \"harrywhite@gmail.com\",\n                type: \"professional\"\n            }\n        ],\n\n        current: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //ADD CONTACT\n    const addContact = (contact) => {\n        contact.id = uuid.v4()\n        dispatch({ type: ADD_CONTACT, payload: contact })\n    }\n\n    //DELETE CONTACT\n    const deleteContact = (id) => {\n        dispatch({ type: DELETE_CONTACT, payload: id })\n    }\n\n    //SET CURRENT CONTACT\n\n    //CLEAR CURRENT CONTACT\n\n    //UPDATE CONTACT\n\n    //FILTER CONTACTS\n\n    //CLEAR FILTER\n\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                addContact, deleteContact,\n\n            }}>\n            {props.children}\n        </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}