{"ast":null,"code":"import _slicedToArray from \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null\n  };\n\n  const _useReducer = useReducer(AuthReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //REGISTER USER\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      let res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      console.error(err.message);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //USER LOADED\n\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken();\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //LOGIN USER\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    try {\n      let res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      console.error(err.message);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //LOGOUT\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //CLEAR ERRORS\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      error: state.error,\n      user: state.user,\n      register,\n      clearErrors,\n      login,\n      logout,\n      loadUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","setAuthToken","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","user","state","dispatch","register","formData","config","headers","res","post","type","payload","data","loadUser","err","console","message","response","msg","get","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport axios from 'axios';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from '../types'\n\nconst AuthState = (props) => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        error: null,\n        user: null\n    };\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    //REGISTER USER\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            let res = await axios.post('/api/users', formData, config);\n            dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n            loadUser();\n        } catch (err) {\n            console.error(err.message)\n            dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\n        }\n    }\n\n    //USER LOADED\n    const loadUser = async () => {\n        if (localStorage.token) {\n            setAuthToken()\n        }\n\n        try {\n            const res = await axios.get('/api/auth')\n            dispatch({ type: USER_LOADED, payload: res.data })\n        } catch (error) {\n            dispatch({ type: AUTH_ERROR })\n\n        }\n    }\n\n    //LOGIN USER\n    const login = async formData => {\n        const config = {\n            headers: {\n                'content-type': 'application/json'\n            }\n        }\n\n        try {\n            let res = await axios.post('/api/auth', formData, config);\n            dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n            loadUser();\n        } catch (err) {\n            console.error(err.message)\n            dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg });\n        }\n    }\n\n    //LOGOUT\n    const logout = () => {\n        dispatch({ type: LOGOUT })\n    }\n\n    //CLEAR ERRORS\n    const clearErrors = () => dispatch({ type: CLEAR_ERRORS })\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                error: state.error,\n                user: state.user,\n                register, clearErrors,\n                login, logout, loadUser\n            }}>\n\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}