{"ast":null,"code":"import _slicedToArray from \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/contacts/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport axios from 'axios';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACT, CLEAR_CONTACT } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //GET CONTACT\n\n\n  const getContacts = async () => {\n    try {\n      const res = axios.get(\"/api/contacts/\");\n      dispatch({\n        type: GET_CONTACT,\n        payload: res.data\n      });\n      console.log(state.contacts);\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //ADD CONTACT\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //DELETE CONTACT\n\n\n  const deleteContact = async id => {\n    // axios.delete('/api/contacts')\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //SET CURRENT CONTACT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //CLEAR CURRENT CONTACT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //UPDATE CONTACT\n\n\n  const updateContact = async contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //FILTER CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //CLEAR FILTER\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/contacts/ContactState.js"],"names":["React","useReducer","ContactContext","ContactReducer","axios","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACT","CLEAR_CONTACT","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","console","log","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport axios from 'axios'\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n    GET_CONTACT,\n    CLEAR_CONTACT\n} from '../types'\n\nconst ContactState = (props) => {\n    const initialState = {\n        contacts: null,\n        current: null,\n        filtered: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    //GET CONTACT\n    const getContacts = async () => {\n        try {\n            const res = axios.get(`/api/contacts/`)\n            dispatch({\n                type: GET_CONTACT,\n                payload: res.data\n            });\n            console.log(state.contacts)\n        } catch (err) {\n            dispatch({\n                type: CONTACT_ERROR,\n                payload: err.response.msg\n            })\n        }\n    }\n\n    //ADD CONTACT\n    const addContact = async (contact) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n            dispatch({\n                type: ADD_CONTACT,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: CONTACT_ERROR,\n                payload: err.response.msg\n            });\n        }\n\n    }\n\n    //DELETE CONTACT\n    const deleteContact = async (id) => {\n        // axios.delete('/api/contacts')\n        dispatch({ type: DELETE_CONTACT, payload: id })\n    }\n\n    //SET CURRENT CONTACT\n    const setCurrent = (contact) => {\n        dispatch({ type: SET_CURRENT, payload: contact })\n    }\n\n    //CLEAR CURRENT CONTACT\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    //UPDATE CONTACT\n    const updateContact = async (contact) => {\n        dispatch({ type: UPDATE_CONTACT, payload: contact })\n    }\n\n    //FILTER CONTACTS\n    const filterContacts = (text) => {\n        dispatch({ type: FILTER_CONTACTS, payload: text })\n    }\n\n    //CLEAR FILTER\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER })\n    }\n\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filtered: state.filtered,\n                error: state.error,\n                addContact, deleteContact,\n                setCurrent, clearCurrent,\n                updateContact, filterContacts,\n                clearFilter, getContacts\n            }}>\n            {props.children}\n        </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}