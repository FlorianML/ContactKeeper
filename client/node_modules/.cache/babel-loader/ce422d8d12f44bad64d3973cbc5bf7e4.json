{"ast":null,"code":"import _slicedToArray from \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(AlertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //SET ALERT\n\n\n  const setAlert = (msg, type, timeout = 4000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","AlertContext","AlertReducer","uuid","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","v4","payload","setTimeout","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACIC,SADJ,EAEIC,YAFJ,QAGO,UAHP;;AAKA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,YAAY,GAAG,EAArB;;AAD0B,sBAGAR,UAAU,CAACE,YAAD,EAAeM,YAAf,CAHV;AAAA;AAAA,QAGnBC,KAHmB;AAAA,QAGZC,QAHY,oBAK1B;;;AACA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC5C,UAAMC,EAAE,GAAGZ,IAAI,CAACa,EAAL,EAAX;AACAN,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,SAAR;AAAmBa,MAAAA,OAAO,EAAE;AAAEL,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAA5B,KAAD,CAAR;AAEAG,IAAAA,UAAU,CAAC,MAAMR,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBY,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAf,EAAsDD,OAAtD,CAAV;AACH,GALD;;AAQA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,MAAM,EAAEV,KADL;AAEHE,MAAAA;AAFG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKJ,KAAK,CAACa,QALX,CADJ;AASH,CAvBD;;AAyBA,eAAed,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport uuid from 'uuid';\nimport {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../types'\n\nconst AlertState = (props) => {\n    const initialState = []\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n    //SET ALERT\n    const setAlert = (msg, type, timeout = 4000) => {\n        const id = uuid.v4();\n        dispatch({ type: SET_ALERT, payload: { msg, type, id } })\n\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\n    }\n\n\n    return (\n        <AlertContext.Provider\n            value={{\n                alerts: state,\n                setAlert\n            }}>\n            {props.children}\n        </AlertContext.Provider>\n    );\n};\n\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}