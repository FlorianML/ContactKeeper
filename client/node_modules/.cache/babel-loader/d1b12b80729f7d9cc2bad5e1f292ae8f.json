{"ast":null,"code":"var _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { useContext, Fragment } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contacts/contactContext';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered;\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })) : contacts.map(contact => React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","Transition","TransitionGroup","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,cAAc,GAAGP,UAAU,CAACK,cAAD,CAAjC;AADmB,QAEXG,QAFW,GAEYD,cAFZ,CAEXC,QAFW;AAAA,QAEDC,QAFC,GAEYF,cAFZ,CAEDE,QAFC;;AAInB,MAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACvB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AACD,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,KAAK,IAAb,GAAoBA,QAAQ,CAACE,GAAT,CAAaC,OAAO,IACrC,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAApB,GAEIJ,QAAQ,CAACG,GAAT,CAAaC,OAAO,IACrB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CAHT,CADJ,CADJ;AAWH,CAlBD;;AAoBA,eAAeN,QAAf","sourcesContent":["import React, { useContext, Fragment } from 'react'\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem'\nimport ContactContext from '../../context/contacts/contactContext'\n\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n    const { contacts, filtered } = contactContext\n\n    if (contacts.length === 0) {\n        return <h4>Please add a contact</h4>\n    }\n    return (\n        <Fragment>\n            <TransitionGroup>\n                {filtered !== null ? filtered.map(contact => (\n                    <ContactItem key={contact.id} contact={contact} />\n                )) : contacts.map(contact => (\n                    <ContactItem key={contact.id} contact={contact} />\n                ))}\n            </TransitionGroup>\n        </Fragment>\n    )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}