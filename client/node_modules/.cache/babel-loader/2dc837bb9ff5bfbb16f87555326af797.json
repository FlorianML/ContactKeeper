{"ast":null,"code":"var _jsxFileName = \"/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { useContext, Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contacts/contactContext';\nimport Spinner from '../layout/Spinner';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered,\n        getContacts = contactContext.getContacts,\n        loading = contactContext.loading;\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, contacts !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })))) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/Flaplanche/Documents/Workspaces/JS Workspaces/React/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,cAAc,GAAGT,UAAU,CAACM,cAAD,CAAjC;AADmB,QAGXI,QAHW,GAGkCD,cAHlC,CAGXC,QAHW;AAAA,QAGDC,QAHC,GAGkCF,cAHlC,CAGDE,QAHC;AAAA,QAGSC,WAHT,GAGkCH,cAHlC,CAGSG,WAHT;AAAA,QAGsBC,OAHtB,GAGkCJ,cAHlC,CAGsBI,OAHtB;AAKnBX,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAAzC,IAA8C,CAACD,OAAnD,EAA4D;AACxD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AAED,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,GACG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,KAAK,IAAb,GACKA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF,CADL,GAUKN,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF,CAXV,CADH,GAuBO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBZ,CADJ;AA6BH,CA3CD;;AA6CA,eAAeR,QAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem'\nimport ContactContext from '../../context/contacts/contactContext'\nimport Spinner from '../layout/Spinner'\n\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n\n    const { contacts, filtered, getContacts, loading } = contactContext;\n\n    useEffect(() => {\n        getContacts();\n        // eslint-disable-next-line\n    }, []);\n\n    if (contacts !== null && contacts.length === 0 && !loading) {\n        return <h4>Please add a contact</h4>;\n    }\n\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup>\n                    {filtered !== null\n                        ? filtered.map(contact => (\n                            <CSSTransition\n                                key={contact._id}\n                                timeout={500}\n                                classNames='item'\n                            >\n                                <ContactItem contact={contact} />\n                            </CSSTransition>\n                        ))\n                        : contacts.map(contact => (\n                            <CSSTransition\n                                key={contact._id}\n                                timeout={500}\n                                classNames='item'\n                            >\n                                <ContactItem contact={contact} />\n                            </CSSTransition>\n                        ))}\n                </TransitionGroup>\n            ) : (\n                    <Spinner />\n                )}\n        </Fragment>\n    );\n};\n\nexport default Contacts;\n\n"]},"metadata":{},"sourceType":"module"}